---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import type { Logo } from "../types";
import clockIcon from "../images/svg/clockIcon.svg";

interface Props {
	title: string;
	snippet: string;
	href: string;
	metaimg: ImageMetadata;
	readingTime: string;
	metaimgAlt: string;
	logos?: Logo[];
	// The default value is "lazy" but it can be set to "eager" if needed
	imgLoading?: "eager" | undefined;
}

const {
	title,
	snippet,
	href,
	readingTime,
	metaimg,
	metaimgAlt,
	logos,
	imgLoading,
} = Astro.props;
---

<div class="project-card flex text-lg rounded-lg">
    <a
        href={href}
        class="rounded-lg py-6 px-5 bg-accent-dark-overlay-lvl-2 no-underline text-inherit"
    >
        <h2
            class="text-3xl font-bold mb-4 flex justify-between tracking-tight leading-none"
        >
            <span class="project-card-title hover:">{title}</span>
            <span>&rarr;</span>
        </h2>
        <div
            class="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-6"
        >
            <Image
                class="meta-img w-full md:w-1/2 lg:w-1/3 xl:w-1/4 rounded-lg h-auto object-cover opacity-80"
                src={metaimg}
                alt={metaimgAlt ?? "Meta image"}
                loading={imgLoading}
            />
            <p class="text-xl">{snippet}</p>
        </div>
        {
            logos ? (
                <div class="logos flex flex-wrap mt-2 gap-1 opacity-90">
                    {logos.map((logo) => (
                        <Image
                            src={logo.url}
                            alt={logo.alt}
                            class="rounded-md"
                            loading={imgLoading}
                        />
                    ))}
                </div>
            ) : null
        }
        {
            readingTime ? (
                <div class="mt-3">
                    <span class="text-sm text-gray-400 flex items-center justify-end opacity-80">
                        <Image
                            src={clockIcon}
                            alt="Clock icon"
                            class="w-4 h-4 mr-1"
                        />
                        {readingTime}
                    </span>
                </div>
            ) : null
        }
    </a>
</div>
<style>
    .project-card {
        opacity: 0.8;
        /* Darker than "rgb(39, 40, 51)" but lighter than "rgb(6, 9, 19)", */
        border: 1px solid rgb(30, 30, 30);
        transition:
            border-color 300ms ease-in-out,
            opacity 300ms ease-in-out;
    }

    .project-card:is(:hover, :focus-within) {
        border-color: rgb(232, 196, 249);
        opacity: 1;
    }
    .project-card:is(:hover, :focus-within) .project-card-title {
        text-decoration: underline;
        text-underline-offset: 0.2em;
    }
</style>
